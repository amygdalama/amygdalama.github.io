<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Amy Hanlon</title><link href="http://amygdalama.github.io/" rel="alternate"></link><link href="http://amygdalama.github.io/feeds/tags/git.atom.xml" rel="self"></link><id>http://amygdalama.github.io/</id><updated>2014-03-08T00:00:00-05:00</updated><entry><title>GitHub Pages Publication with Git Hooks</title><link href="http://amygdalama.github.io/github-pages-publication-git-hooks.html" rel="alternate"></link><updated>2014-03-08T00:00:00-05:00</updated><author><name>Amy Hanlon</name></author><id>tag:amygdalama.github.io,2014-03-08:github-pages-publication-git-hooks.html</id><summary type="html">&lt;p&gt;As I &lt;a href="http://mathamy.com/migrating-to-github-pages-using-pelican.html"&gt;wrote&lt;/a&gt; at length a couple weeks ago, this blog is hosted on &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; and generated by &lt;a href="http://docs.getpelican.com/en/3.3.0/"&gt;Pelican&lt;/a&gt;. Generally the integration between the two is quite blissful, except for managing two separate repositories - &lt;a href="https://github.com/amygdalama/blog-source"&gt;blog-source&lt;/a&gt; for my blog's source content, configuration files, and theme, and &lt;a href="https://github.com/amygdalama/amygdalama.github.io"&gt;amygdalama.github.io&lt;/a&gt; for my Pelican-generated site.&lt;/p&gt;
&lt;p&gt;Lately I've been pushing to these two separate repositories manually, so my workflow looks something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog/      &lt;span class="c"&gt;# root directory for my blog&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver    &lt;span class="c"&gt;# automatically re-generates site and hosts site locally&lt;/span&gt;
&lt;span class="c"&gt;# change something in content or settings&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git add --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;committing blog source&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master    &lt;span class="c"&gt;# pushes to my blog-source repo on GitHub&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;output/    &lt;span class="c"&gt;# pelican-generated output folder&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -am &lt;span class="s2"&gt;&amp;quot;committing pelican-generated site content&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin master    &lt;span class="c"&gt;# pushes to my amygdalama.github.io repo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But alas! I have figured out how to automatically push any changes committed in my root blog directory to my blog-source repo and then automatically add, commit, and push changes to my GitHub Pages repo. Now my workflow looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog/
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver
&lt;span class="c"&gt;# change something in content or settings&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git add --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;committing blog source&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# everything else happens automatically! no more typing! yay!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The key is to use &lt;a href="http://githooks.com/"&gt;Git Hooks&lt;/a&gt;. For a particular .git repo, you can add an executable file in &lt;code&gt;.git/hooks&lt;/code&gt; which will automatically execute before or after an event like &lt;code&gt;commit&lt;/code&gt;. The available types of hooks can be found &lt;a href="http://githooks.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this specific automation task, I used a post-commit hook. To do this, first create the file &lt;code&gt;.git/hooks/post-commit&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog/
&lt;span class="nv"&gt;$ &lt;/span&gt;subl .git/hooks/post-commit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add these lines to the file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
git push origin master
&lt;span class="nb"&gt;cd &lt;/span&gt;output/
git add --all       &lt;span class="c"&gt;# sub-optimally will add all even if you didn&amp;#39;t add all to blog-source&lt;/span&gt;
git commit -m &lt;span class="s2"&gt;&amp;quot;automatic commit&amp;quot;&lt;/span&gt;    &lt;span class="c"&gt;# add whatever commit message you want&lt;/span&gt;
git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, to make the file executable, type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;r+w+x .git/hooks/post-commit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And that's it! Joyful automation!&lt;/p&gt;
&lt;h2 id="edit"&gt;Edit&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;2014-03-14&lt;/em&gt;: Hacker Schooler Matthew Avant has a &lt;a href="http://www.mavant.com/4.html"&gt;superior&lt;/a&gt; method using a pre-push hook (rather than a post-commit hook). I'm using his method now :)&lt;/p&gt;</summary><category term="github pages"></category><category term="pelican"></category><category term="git"></category><category term="blogging"></category><category term="hacker school"></category></entry></feed>